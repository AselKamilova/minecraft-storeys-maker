// see also ../storeys/build.gradle

plugins {
    id 'com.github.johnrengelman.shadow' version '2.0.2'
}

ext {
  vertxVersion = '3.5.0'
}

dependencies {
    implementation project(':storeys')

    implementation 'org.osgi:org.osgi.core:6.0.0'
    implementation 'ch.vorburger.minecraft:ch.vorburger.minecraft.osgi.api:1.0.0-SNAPSHOT'

    compile "io.vertx:vertx-core:$vertxVersion"
    compile "io.vertx:vertx-web:$vertxVersion"

    testCompile "io.vertx:vertx-unit:$vertxVersion"
    testCompile "org.slf4j:slf4j-simple:1.7.21"
}

shadowJar {
  // Relocate shaded Netty dependency, because Minecraft Server uses (a very OLD version of!) Netty itself
  // causing java.lang.NoSuchMethodError: io.netty.util.NetUtil.isIpV4StackPreferred()Z at io.netty.resolver.dns.DnsNameResolver.<clinit>(DnsNameResolver.java:103)
  relocate 'io.netty', 'ch.vorburger.relocated.io.netty'

  // Exclude the Sponge Plugin class of our base (non-web) project, because our StoreysWebPlugin class also extends the AbstractStoreysPlugin
  exclude 'ch/vorburger/minecraft/storeys/plugin/StoreysPlugin.class'

  dependencies {
    // http://imperceptiblethoughts.com/shadow/#filtering_dependencies
    // NB "not being able to filter entire transitive dependency graphs"
    // so instead of using exclude dependency we just do explicit include:
    include(project(':storeys'))
    include(dependency("io.vertx:vertx-core"))
    include(dependency("io.vertx:vertx-web"))
    include(dependency("io.vertx:vertx-auth-common"))
    include(dependency("io.vertx:vertx-bridge-common"))
    // having to repeat all of Vert.x's Netty dependencies here feel stupid,
    // but there doesn't seem to be an easier way; the alternative would be
    // to instead of include only use exclude of all of spongepowered's libs.
    include(dependency("io.netty:netty-common"))
    include(dependency("io.netty:netty-buffer"))
    include(dependency("io.netty:netty-transport"))
    include(dependency("io.netty:netty-resolver"))
    include(dependency("io.netty:netty-resolver-dns"))
    include(dependency("io.netty:netty-handler"))
    include(dependency("io.netty:netty-handler-proxy"))
    include(dependency("io.netty:netty-codec"))
    include(dependency("io.netty:netty-codec-dns"))
    include(dependency("io.netty:netty-codec-socks"))
    include(dependency("io.netty:netty-codec-http"))
    include(dependency("io.netty:netty-codec-http2"))
    include(dependency("com.fasterxml.jackson.core:jackson-core"))
    include(dependency("com.fasterxml.jackson.core:jackson-databind"))
    include(dependency("com.fasterxml.jackson.core:jackson-annotations"))
    include(dependency('ch.vorburger.minecraft:ch.vorburger.minecraft.osgi.api'))
  }
}

artifacts {
    shadowJar;
}

assemble.dependsOn(shadowJar);
